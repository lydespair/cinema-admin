<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.user.mapper.UsersMapper">
    
    <resultMap type="Users" id="UsersResult">
        <result property="userId"    column="user_id"    />
        <result property="username"    column="username"    />
        <result property="passwordHash"    column="password_hash"    />
        <result property="email"    column="email"    />
        <result property="phone"    column="phone"    />
        <result property="nickname"    column="nickname"    />
        <result property="createdAt"    column="created_at"    />
        <result property="updatedAt"    column="updated_at"    />
    </resultMap>

    <sql id="selectUsersVo">
        select user_id, username, password_hash, email, phone, nickname, created_at, updated_at from users
    </sql>

    <select id="selectUsersList" parameterType="Users" resultMap="UsersResult">
        <include refid="selectUsersVo"/>
        <where>  
            <if test="userId != null  and userId != ''"> and user_id = #{userId}</if>
            <if test="username != null  and username != ''"> and username like concat('%', #{username}, '%')</if>
            <if test="passwordHash != null  and passwordHash != ''"> and password_hash = #{passwordHash}</if>
            <if test="email != null  and email != ''"> and email = #{email}</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="nickname != null  and nickname != ''"> and nickname like concat('%', #{nickname}, '%')</if>
            <if test="createdAt != null "> and created_at = #{createdAt}</if>
            <if test="updatedAt != null "> and updated_at = #{updatedAt}</if>
        </where>
    </select>
    
    <select id="selectUsersByUserId" parameterType="String" resultMap="UsersResult">
        <include refid="selectUsersVo"/>
        where user_id = #{userId}
    </select>

    <insert id="insertUsers" parameterType="Users">
        insert into users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="username != null">username,</if>
            <if test="passwordHash != null">password_hash,</if>
            <if test="email != null">email,</if>
            <if test="phone != null">phone,</if>
            <if test="nickname != null">nickname,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="updatedAt != null">updated_at,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="username != null">#{username},</if>
            <if test="passwordHash != null">#{passwordHash},</if>
            <if test="email != null">#{email},</if>
            <if test="phone != null">#{phone},</if>
            <if test="nickname != null">#{nickname},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
         </trim>
    </insert>

    <update id="updateUsers" parameterType="Users">
        update users
        <trim prefix="SET" suffixOverrides=",">
            <if test="username != null">username = #{username},</if>
            <if test="passwordHash != null">password_hash = #{passwordHash},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="createdAt != null">created_at = #{createdAt},</if>
            <if test="updatedAt != null">updated_at = #{updatedAt},</if>
        </trim>
        where user_id = #{userId}
    </update>

    <delete id="deleteUsersByUserId" parameterType="String">
        delete from users where user_id = #{userId}
    </delete>

    <delete id="deleteUsersByUserIds" parameterType="String">
        delete from users where user_id in 
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>
</mapper>